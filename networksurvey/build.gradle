plugins {
    id 'com.android.application'
    alias(libs.plugins.org.jetbrains.kotlin.android)
    //alias(libs.plugins.compose.compiler)
    alias(libs.plugins.kotlin.kapt)
    id 'dagger.hilt.android.plugin'
    alias(libs.plugins.kotlin.parcelize)
    //alias(libs.plugins.google.devtools.ksp)
    id 'com.google.devtools.ksp'
    id 'com.github.jk1.dependency-license-report' version '2.9'
}

// Exclude google-services and crashlytics if the json file is missing and for debug builds
if (file("google-services.json").exists() && !gradle.startParameter.taskNames.any { it.contains("Debug") || it.contains("test") }) {
    logger.quiet("Using the google-services.json file")
    apply plugin: "com.google.gms.google-services"
    apply plugin: "com.google.firebase.crashlytics"
}

ext.androidVersion = '28.0.0'
ext.grpcVersion = '1.69.1'
ext.networkSurveyMessagingVersion = '1.8.0'
ext.navigationVersion = '2.8.9'

android {
    compileSdk 35
    defaultConfig {
        buildConfigField "String", "MESSAGING_API_VERSION", "\"${networkSurveyMessagingVersion}\""
        buildConfigField 'String', "NS_API_KEY", "\"${nsApiKey}\""
        buildConfigField 'String', "OCID_API_KEY", "\"${ocidApiKey}\""
        applicationId "com.craxiom.networksurvey"
        minSdkVersion 26
        targetSdkVersion 35
        versionCode 90
        versionName "1.35"
        setProperty("archivesBaseName", "$applicationName-$versionName")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }
    buildTypes {
        debug {
            applicationIdSuffix ".dev" // Suffix for debug builds
            resValue "string", "app_name", "NS - dev"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.14'
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/INDEX.LIST', 'META-INF/io.netty.versions.properties', 'google/cloud/audit/audit_log.proto']
        }
    }

    dependenciesInfo {
        // Disables dependency metadata when building APKs.
        includeInApk = false
    }

    lint {
        abortOnError false
    }
    namespace 'com.craxiom.networksurvey'

    flavorDimensions = ["version"]
    productFlavors {
        // Regular is for Google Play that contains Firebase tracking features such as crashlytics
        regular {
            versionNameSuffix ""
        }

        // Has the extra CDR features and does not contain any tracking
        cdr {
            versionNameSuffix ""
        }
    }
}

configurations.configureEach {
    exclude group: 'com.google.android.gms', module: 'play-services-ads'
    exclude group: 'com.google.android.gms', module: 'play-services-ads-identifier'
    exclude group: 'com.google.android.gms', module: 'play-services-ads-lite'
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation "androidx.navigation:navigation-runtime-ktx:${navigationVersion}"
    implementation "androidx.navigation:navigation-fragment-ktx:${navigationVersion}"
    implementation "androidx.navigation:navigation-ui-ktx:${navigationVersion}"
    implementation "androidx.navigation:navigation-compose:${navigationVersion}"
    implementation "androidx.viewpager2:viewpager2:1.1.0"
    implementation "androidx.activity:activity-compose:1.10.1"
    implementation "androidx.drawerlayout:drawerlayout:1.2.0"
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    implementation 'com.craxiom:mqtt-library:0.7.5'
    implementation "com.google.protobuf:protobuf-java-util:4.28.2"
    implementation "io.grpc:grpc-okhttp:${grpcVersion}"
    implementation "io.grpc:grpc-android:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation("io.grpc:grpc-protobuf:${grpcVersion}") {
        exclude group: 'com.google.api.grpc', module: 'proto-google-common-protos'
    }

    implementation("com.craxiom:network-survey-messaging:${networkSurveyMessagingVersion}") {
        exclude group: 'com.google.api.grpc', module: 'proto-google-common-protos'
    }

    implementation "mil.nga.geopackage:geopackage-android:6.7.3"
    implementation 'org.apache.commons:commons-csv:1.10.0'

    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.4.0'

    implementation 'app.futured.donut:donut:2.2.3'
    implementation 'com.github.MackHartley:RoundedProgressBar:3.0.0'
    implementation 'com.patrykandpatrick.vico:core:2.0.0-alpha.6'
    implementation 'com.patrykandpatrick.vico:compose-m3:2.0.0-alpha.6'

    implementation 'com.github.yuriy-budiyev:code-scanner:2.3.2'
    implementation 'com.google.zxing:core:3.5.3'

    implementation 'androidx.room:room-common:2.6.1'

    implementation "com.google.dagger:dagger:$hilt_version"
    implementation 'androidx.compose.ui:ui-viewbinding:1.7.8'
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    kapt "com.google.dagger:dagger-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    implementation 'org.osmdroid:osmdroid-android:6.1.20'
    // Provides additional features including Marker clustering
    implementation 'com.github.MKergall:osmbonuspack:6.9.0'

    implementation 'com.squareup.retrofit2:retrofit:2.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'
    implementation 'org.yaml:snakeyaml:2.4'

    implementation "androidx.work:work-runtime:2.10.0"

    // Compose
    def composeBom = platform('androidx.compose:compose-bom:2025.03.01')
    implementation(composeBom)
    androidTestImplementation(composeBom)

    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.foundation:foundation-layout"
    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.runtime:runtime-livedata"
    implementation "androidx.compose.ui:ui-tooling"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose"
    implementation "androidx.lifecycle:lifecycle-runtime-compose"
    implementation 'androidx.compose.ui:ui-tooling:1.7.8'
    implementation "com.google.accompanist:accompanist-themeadapter-material:0.36.0"

    // Only include firebase in the google play build
    regularImplementation platform('com.google.firebase:firebase-bom:33.5.1')
    regularImplementation 'com.google.firebase:firebase-analytics'
    regularImplementation 'com.google.firebase:firebase-crashlytics'

    testImplementation 'junit:junit:4.13.2'
    implementation 'androidx.annotation:annotation:1.9.1'

    // Uncomment if you want to hunt for memory leaks
    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:3.0-alpha-1'

    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    androidTestImplementation 'com.adevinta.android:barista:4.3.0'
    androidTestImplementation 'com.google.truth:truth:1.4.4'
    androidTestImplementation "com.craxiom:network-survey-messaging:${networkSurveyMessagingVersion}"
    androidTestImplementation "mil.nga.geopackage:geopackage-android:6.7.3"
}

import com.github.jk1.license.filter.LicenseBundleNormalizer
import com.github.jk1.license.render.SimpleHtmlReportRenderer

licenseReport {
    outputDir = "$projectDir/build/licenses"
    projects = [project] + project.subprojects
    configurations = ['regularReleaseRuntimeClasspath']
    renderers = [new SimpleHtmlReportRenderer()]
    filters = [new LicenseBundleNormalizer()]
}
